<?php
if (!isset($_POST['os'])) {
    echo "Erreur : OS non d√©fini.";
    exit;
}

$os_raw = $_POST['os'];
$os_safe = preg_replace('/[^a-z0-9_-]/i', '', $os_raw); // s√©curit√©

// üìÅ R√©pertoire d'origine (mont√© depuis l'h√¥te)
$origin = "/var/www/terraform/terraform_vm";

// üìÅ R√©pertoire d'ex√©cution temporaire dans le container (pas de restriction chmod)
$tmpdir = "/tmp/terraform_vm_exec_" . uniqid();

// üîÅ Supprime l'ancien dossier s'il existait, puis copie le projet
if (is_dir($tmpdir)) {
    shell_exec("rm -rf $tmpdir");
}
shell_exec("cp -r $origin $tmpdir");

// üìù G√©n√®re le fichier .tfvars dans le dossier temporaire
file_put_contents("$tmpdir/os.auto.tfvars", "os = \"$os_safe\"\n");

// üîß Indique √† Terraform d‚Äôutiliser un cache local dans /tmp
putenv("TF_DATA_DIR=/tmp/terraform_cache_" . uniqid());

// üßô‚Äç‚ôÇÔ∏è Ex√©cute Terraform
$cmd = "cd $tmpdir && terraform init -input=false && terraform apply -auto-approve 2>&1";
$output = shell_exec($cmd);

// üñ®Ô∏è Affiche le r√©sultat √† l'√©cran
echo "<h2>R√©sultat du d√©ploiement pour $os :</h2>";
echo "<pre>$output</pre>";
?>
